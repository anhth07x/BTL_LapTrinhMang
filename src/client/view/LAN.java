/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.view;

import client.view.component.CustomMessageDialog;
import consts.Consts;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import model.ClientState;
import model.Room;
import model.SocketIO;

/**
 *
 * @author tienanh
 */
public class LAN extends javax.swing.JFrame {
	private ClientState player;
	private ArrayList<Room> listRoomWaiting;
	private Room selectedRoom;
	private SocketIO socketIO;
	private boolean isRegisterName;
	private DefaultListModel listMapStr;

	public LAN(SocketIO socketIO, ClientState player, boolean isRegisterName) {
		this.player = player;
		this.socketIO = socketIO;
		this.isRegisterName = isRegisterName;
		initComponents();
		this.setTranparencyEffect();
		initMapData();
	}
	
	public void setTranparencyEffect () {
		// Set Background tranparency
		jPanel1.setBackground(new Color(254, 254, 254, 20));
		jPanel2.setBackground(new Color(254, 254, 254, 20));
		jPanel3.setBackground(new Color(254, 254, 254, 20));
		jPanel4.setBackground(new Color(254, 254, 254, 20));
		
		imagePreview.setBackground(new Color(254, 254, 254, 30));
		jScrollPane2.setBackground(new Color(254, 254, 254, 30));		
	}

	public void initMapData() {
		listMapStr = new DefaultListModel();
		getListRoom();
		this.registerMapListEvent();
		if (isRegisterName) {
			this.tfPlayerName.setText(player.getName());
		}
	}

	public void getListRoom() {
		try {
			socketIO.getOutput().writeObject(Consts.GET_LIST_ROOM);
			listRoomWaiting = (ArrayList<Room>) socketIO.getInput().readObject();
			listMapStr.removeAllElements();
			for (Room room : listRoomWaiting) {
				String lastRoomName = room.getName() + " (" + (room.getP2() != null && room.getP2().getName() != null ? 2 : 1) + "/2)";
				listMapStr.addElement(lastRoomName);
			}
			jlistRoomWaiting.setModel(listMapStr);
		} catch (IOException ex) {
			Logger.getLogger(LAN.class.getName()).log(Level.SEVERE, null, ex);
		} catch (ClassNotFoundException ex) {
			Logger.getLogger(LAN.class.getName()).log(Level.SEVERE, null, ex);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooseSaveFile = new javax.swing.JFileChooser();
        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfPlayerName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlistRoomWaiting = new javax.swing.JList<>();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tfRoomName = new javax.swing.JTextField();
        tfRoomCreator = new javax.swing.JTextField();
        tfRoomSpeed = new javax.swing.JTextField();
        imagePreview = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tfRoomDes = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lbBackGround = new javax.swing.JLabel();

        jFileChooseSaveFile.setCurrentDirectory(new java.io.File("/home/tienanh/NetBeansProjects/BrickBreakerV2.0/src/data/save"));
        jFileChooseSaveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooseSaveFileActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel5.setBackground(new java.awt.Color(186, 186, 186));
        jPanel5.setMaximumSize(new java.awt.Dimension(1200, 800));
        jPanel5.setMinimumSize(new java.awt.Dimension(1200, 800));
        jPanel5.setPreferredSize(new java.awt.Dimension(1200, 800));
        jPanel5.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(167, 166, 165));
        jPanel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("LifeCraft", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(254, 254, 254));
        jLabel2.setText("Local Network Games");

        jLabel3.setFont(new java.awt.Font("LifeCraft", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(236, 202, 47));
        jLabel3.setText("Player Name");

        tfPlayerName.setBackground(new java.awt.Color(0, 0, 0));
        tfPlayerName.setFont(new java.awt.Font("LifeCraft", 0, 18)); // NOI18N
        tfPlayerName.setForeground(new java.awt.Color(254, 254, 254));
        tfPlayerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPlayerNameActionPerformed(evt);
            }
        });
        tfPlayerName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfPlayerNameKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfPlayerNameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfPlayerNameKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("LifeCraft", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(236, 202, 47));
        jLabel4.setText("Games");

        jScrollPane1.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        jlistRoomWaiting.setBackground(new java.awt.Color(1, 1, 1));
        jlistRoomWaiting.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(254, 254, 254)));
        jlistRoomWaiting.setFont(new java.awt.Font("LifeCraft", 3, 24)); // NOI18N
        jlistRoomWaiting.setForeground(new java.awt.Color(254, 254, 254));
        jlistRoomWaiting.setSelectionBackground(new java.awt.Color(149, 149, 149));
        jScrollPane1.setViewportView(jlistRoomWaiting);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/image/restart-icon_25x25.png"))); // NOI18N
        jButton5.setToolTipText("Refresh Games");
        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton5MouseEntered(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(tfPlayerName)
                            .addComponent(jScrollPane1))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(0, 424, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(24, 24, 24)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfPlayerName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        jPanel5.add(jPanel1);
        jPanel1.setBounds(12, 12, 743, 640);

        jPanel2.setBackground(new java.awt.Color(226, 199, 172));

        jLabel6.setFont(new java.awt.Font("LifeCraft", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(236, 202, 47));
        jLabel6.setText("Map Name:");

        jLabel7.setFont(new java.awt.Font("LifeCraft", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(236, 202, 47));
        jLabel7.setText("Room Creator:");

        jLabel8.setFont(new java.awt.Font("LifeCraft", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(236, 202, 47));
        jLabel8.setText("GameSpeed:");

        tfRoomName.setEditable(false);
        tfRoomName.setBackground(new java.awt.Color(1, 1, 1));
        tfRoomName.setFont(new java.awt.Font("LifeCraft", 0, 18)); // NOI18N
        tfRoomName.setForeground(new java.awt.Color(254, 254, 254));
        tfRoomName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfRoomNameActionPerformed(evt);
            }
        });

        tfRoomCreator.setEditable(false);
        tfRoomCreator.setBackground(new java.awt.Color(1, 1, 1));
        tfRoomCreator.setFont(new java.awt.Font("LifeCraft", 0, 18)); // NOI18N
        tfRoomCreator.setForeground(new java.awt.Color(254, 254, 254));

        tfRoomSpeed.setEditable(false);
        tfRoomSpeed.setBackground(new java.awt.Color(1, 1, 1));
        tfRoomSpeed.setFont(new java.awt.Font("LifeCraft", 0, 18)); // NOI18N
        tfRoomSpeed.setForeground(new java.awt.Color(254, 254, 254));
        tfRoomSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfRoomSpeedActionPerformed(evt);
            }
        });

        imagePreview.setBackground(new java.awt.Color(108, 108, 108));
        imagePreview.setOpaque(true);

        jLabel10.setFont(new java.awt.Font("LifeCraft", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(236, 202, 47));
        jLabel10.setText("Description:");

        jScrollPane2.setOpaque(false);

        tfRoomDes.setEditable(false);
        tfRoomDes.setBackground(new java.awt.Color(1, 1, 1));
        tfRoomDes.setColumns(20);
        tfRoomDes.setForeground(new java.awt.Color(254, 254, 254));
        tfRoomDes.setLineWrap(true);
        tfRoomDes.setRows(5);
        tfRoomDes.setOpaque(false);
        jScrollPane2.setViewportView(tfRoomDes);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                    .addComponent(imagePreview, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfRoomCreator)
                            .addComponent(tfRoomName)
                            .addComponent(tfRoomSpeed, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imagePreview, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tfRoomName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfRoomCreator, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tfRoomSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.add(jPanel2);
        jPanel2.setBounds(768, 12, 420, 640);

        jPanel3.setBackground(new java.awt.Color(105, 97, 90));

        jLabel1.setFont(new java.awt.Font("LifeCraft", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(236, 202, 47));
        jLabel1.setText("Local Mutiplayer");

        jButton3.setBackground(new java.awt.Color(1, 1, 1));
        jButton3.setFont(new java.awt.Font("LifeCraft", 0, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(254, 254, 254));
        jButton3.setText("Load Game");
        jButton3.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(254, 254, 254)));
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.setOpaque(true);
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton3MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton3MouseEntered(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(1, 1, 1));
        jButton4.setFont(new java.awt.Font("LifeCraft", 0, 24)); // NOI18N
        jButton4.setForeground(new java.awt.Color(254, 254, 254));
        jButton4.setText("Create Game");
        jButton4.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(254, 254, 254)));
        jButton4.setContentAreaFilled(false);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.setOpaque(true);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton4MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton4MouseEntered(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel5.add(jPanel3);
        jPanel3.setBounds(13, 658, 740, 130);

        jPanel4.setBackground(new java.awt.Color(224, 159, 94));

        jButton1.setBackground(new java.awt.Color(1, 1, 1));
        jButton1.setFont(new java.awt.Font("LifeCraft", 0, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(254, 254, 254));
        jButton1.setText("Join Game");
        jButton1.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(254, 254, 254)));
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setOpaque(true);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(1, 1, 1));
        jButton2.setFont(new java.awt.Font("LifeCraft", 0, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(254, 254, 254));
        jButton2.setText("Cancel");
        jButton2.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(254, 254, 254)));
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setOpaque(true);
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton2MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton2MouseEntered(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.add(jPanel4);
        jPanel4.setBounds(770, 658, 420, 130);

        lbBackGround.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/image/bacground_1200x800.jpeg"))); // NOI18N
        lbBackGround.setText("jLabel5");
        lbBackGround.setDisplayedMnemonicIndex(1);
        jPanel5.add(lbBackGround);
        lbBackGround.setBounds(0, -30, 1200, 860);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		try {
			String roomName = jlistRoomWaiting.getSelectedValue();

			// validate
			if (roomName == null) {
				new CustomMessageDialog().showMessage("No Room Selected!!!");
				return;
			}
			if (tfPlayerName.getText().isEmpty()) {
				new CustomMessageDialog().showMessage("No Name Provived!!!");
				return;
			}

			if (selectedRoom.getP2() != null && selectedRoom.getP2().getName() != null) {
				new CustomMessageDialog().showMessage("This Room Reach Maximum!!!");
				return;
			}

			if (!registerName()) {
				return;
			}

			// Join room
			socketIO.getOutput().writeObject(Consts.JOIN_ROOM);
			socketIO.getOutput().writeObject(selectedRoom);

			// Receive new room state ( update P1(Host)  State )
			Room joinedRoom = (Room) socketIO.getInput().readObject();
			int status = (Integer) socketIO.getInput().readObject();

			// Check if room is exist
			if (status == Consts.ROOM_NOT_EXISTS) {
				new CustomMessageDialog().showMessage("Room not exsits");
				DefaultListModel newListMap = new DefaultListModel();

				socketIO.getOutput().writeObject(Consts.GET_LIST_ROOM);
				listRoomWaiting = (ArrayList<Room>) socketIO.getInput().readObject();
				for (Room room : listRoomWaiting) {
					String lastRoomName = room.getName() + " (" + (room.getP2() != null ? 2 : 1) + "/2)";
					newListMap.addElement(lastRoomName);
				}
				jlistRoomWaiting.setModel(newListMap);
				return;
			}
			this.dispose();
			new PrepareGame(socketIO, joinedRoom, false).setVisible(true);
		} catch (IOException ex) {
			Logger.getLogger(LAN.class.getName()).log(Level.SEVERE, null, ex);
		} catch (ClassNotFoundException ex) {
			Logger.getLogger(LAN.class.getName()).log(Level.SEVERE, null, ex);
		}

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
		try {
			this.dispose();
			this.socketIO.getSocket().close();
			new Game().setVisible(true);
		} catch (IOException ex) {
			Logger.getLogger(LAN.class.getName()).log(Level.SEVERE, null, ex);
		}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
		try {
			if (tfPlayerName.getText().isEmpty()) {
				new CustomMessageDialog().showMessage("No Name Provived!!!");
				return;
			}
			if (!isRegisterName || !tfPlayerName.getText().trim().toLowerCase().equals(player.getName())) {
				socketIO.getOutput().writeObject(Consts.SET_PLAYER_NAME);
				socketIO.getOutput().writeObject(tfPlayerName.getText());
				boolean isValidName = (boolean) socketIO.getInput().readObject();
				if (!isValidName) {
					new CustomMessageDialog().showMessage("Name is registered");
					return;
				}
				isRegisterName = true;
				this.player.setName(tfPlayerName.getText());
			}
			this.dispose();
			new CreateRoom(socketIO, player).setVisible(true);
		} catch (Exception ex) {
			Logger.getLogger(LAN.class.getName()).log(Level.SEVERE, null, ex);
		}
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
		try {
			if (tfPlayerName.getText().isEmpty()) {
				new CustomMessageDialog().showMessage("Name is required");
				return;
			}
			if (!registerName()) {
				return;
			}
			
			jFileChooseSaveFile.showOpenDialog(null);
			File saveFile = jFileChooseSaveFile.getSelectedFile();
			if (saveFile == null) return;
			
			ObjectInputStream input = new ObjectInputStream(new FileInputStream(saveFile));
			// Read Object from FILE ( NOT SOCKET !!! )
			Room saveRoom = (Room) input.readObject();
			int index = 0;
			String roomName = "Save_room_" + index;
			for (Room tmp : listRoomWaiting) {
				if (tmp.getName().trim().toLowerCase().equals(roomName)) {
					roomName = "Save_room_" + ++index;
				}
			}
			String imagePreview = getPreviewImagePathFromSaveFile(saveFile.getAbsolutePath());
			
			// Update Room Info
			saveRoom.getMap().getMapInfo().setImagePreviewPath(imagePreview);
			saveRoom.setName(roomName);
			saveRoom.getP1().setName(player.getName());
			// Set P2 to Null ( for wating purpose _ State of p2 is send to server to handle )
			saveRoom.getP2().setName(null);
			
			socketIO.getOutput().writeObject(Consts.LOAD_GAME);
			socketIO.getOutput().writeObject(saveRoom);
			
			this.dispose();
			new PrepareGame(socketIO, saveRoom, true).setVisible(true);
		} catch (IOException ex) {
			Logger.getLogger(LAN.class.getName()).log(Level.SEVERE, null, ex);
		} catch (ClassNotFoundException ex) {
			Logger.getLogger(LAN.class.getName()).log(Level.SEVERE, null, ex);
		}
    }//GEN-LAST:event_jButton3ActionPerformed

	public boolean registerName() {
		try {
			// Validate Name
			if (!isRegisterName) {
				// Set player name
				socketIO.getOutput().writeObject(Consts.SET_PLAYER_NAME);
				socketIO.getOutput().writeObject(tfPlayerName.getText());
				boolean isValidName = (boolean) socketIO.getInput().readObject();
				if (!isValidName) {
					new CustomMessageDialog().showMessage("Name is registered");
					return false;
				}
				isRegisterName = true;
				this.player.setName(tfPlayerName.getText());

			} else if (!tfPlayerName.getText().trim().toLowerCase().equals(player.getName().trim().toLowerCase())) {
				// Update 
				socketIO.getOutput().writeObject(Consts.UPDATE_PLAYER_NAME);
				socketIO.getOutput().writeObject(tfPlayerName.getText());
				boolean isValidName = (boolean) socketIO.getInput().readObject();
				if (!isValidName) {
					new CustomMessageDialog().showMessage("Name is registered");
					return false;
				}
				this.player.setName(tfPlayerName.getName());
			}
		} catch (IOException ex) {
			Logger.getLogger(LAN.class.getName()).log(Level.SEVERE, null, ex);
		} catch (ClassNotFoundException ex) {
			Logger.getLogger(LAN.class.getName()).log(Level.SEVERE, null, ex);
		}
		return true;
	}

	private String getPreviewImagePathFromSaveFile(String fileName) {
		System.out.println(fileName);
		int index = Integer.parseInt(fileName.split("-")[1].split("\\.")[0]);
		return "/data/save/image/preview-" + index + ".png";
	}

    private void tfPlayerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPlayerNameActionPerformed

    }//GEN-LAST:event_tfPlayerNameActionPerformed

    private void tfPlayerNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPlayerNameKeyPressed

    }//GEN-LAST:event_tfPlayerNameKeyPressed

    private void tfPlayerNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPlayerNameKeyTyped

    }//GEN-LAST:event_tfPlayerNameKeyTyped

    private void tfPlayerNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPlayerNameKeyReleased
		player.setName(tfPlayerName.getText());
    }//GEN-LAST:event_tfPlayerNameKeyReleased

    private void tfRoomSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfRoomSpeedActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_tfRoomSpeedActionPerformed

    private void jFileChooseSaveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooseSaveFileActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_jFileChooseSaveFileActionPerformed

    private void jButton3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseEntered
		addHoverEffect(jButton3);
    }//GEN-LAST:event_jButton3MouseEntered

    private void jButton4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseEntered
        addHoverEffect(jButton4);
    }//GEN-LAST:event_jButton4MouseEntered

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        addHoverEffect(jButton1);
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseEntered
        addHoverEffect(jButton2);
    }//GEN-LAST:event_jButton2MouseEntered

    private void jButton3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseExited
        removeHoverEffect(jButton3);
    }//GEN-LAST:event_jButton3MouseExited

    private void jButton4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseExited
        removeHoverEffect(jButton4);
    }//GEN-LAST:event_jButton4MouseExited

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        removeHoverEffect(jButton1);
    }//GEN-LAST:event_jButton1MouseExited

    private void jButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseExited
        removeHoverEffect(jButton2);
    }//GEN-LAST:event_jButton2MouseExited

    private void tfRoomNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfRoomNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfRoomNameActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
		getListRoom();
		repaint();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseEntered
		repaint();
    }//GEN-LAST:event_jButton5MouseEntered

	private void registerMapListEvent() {
		jlistRoomWaiting.addListSelectionListener(new ListSelectionListener() {
			@Override
			public void valueChanged(ListSelectionEvent arg0) {
				if (!arg0.getValueIsAdjusting()) {
					if (jlistRoomWaiting.getSelectedValue() != null) {
						String roomName = jlistRoomWaiting.getSelectedValue().trim().split(" ")[0];
						selectedRoom = getRoomByName(roomName);

						ImageIcon icon = new ImageIcon(getClass().getResource(selectedRoom.getMap().getMapInfo().getImagePreviewPath()));
						Image resize = icon.getImage().getScaledInstance(imagePreview.getWidth(), imagePreview.getHeight(), Image.SCALE_SMOOTH);
						ImageIcon result = new ImageIcon(resize);
						imagePreview.setIcon(result);

						tfRoomCreator.setText(selectedRoom.getP1().getName());
						tfRoomDes.setText(selectedRoom.getMap().getMapInfo().getDes());
						tfRoomName.setText(selectedRoom.getName());
						tfRoomSpeed.setText(new Integer(selectedRoom.getSpeed()).toString());
					}
				}
			}
		});
	}

	private Room getRoomByName(String roomName) {
		for (Room room : listRoomWaiting) {
			if (room.getName().equals(roomName)) {
				return room;
			}
		}
		return null;
	}
	
	public void addHoverEffect (JButton jButton) {
		jButton.setForeground(new Color(0, 0, 0));
		jButton.setBackground(new Color(254, 254, 254));
	}
	
	public void removeHoverEffect (JButton jButton) {
		jButton.setForeground(new java.awt.Color(254, 254, 254));
		jButton.setBackground(new Color(0, 0, 0));
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel imagePreview;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JFileChooser jFileChooseSaveFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> jlistRoomWaiting;
    private javax.swing.JLabel lbBackGround;
    private javax.swing.JTextField tfPlayerName;
    private javax.swing.JTextField tfRoomCreator;
    private javax.swing.JTextArea tfRoomDes;
    private javax.swing.JTextField tfRoomName;
    private javax.swing.JTextField tfRoomSpeed;
    // End of variables declaration//GEN-END:variables
}
